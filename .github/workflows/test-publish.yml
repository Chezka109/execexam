name: Test Publish

on:
  push:
    tags:
      - 't*'  # This triggers on tags starting with 't'

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11, 3.12]  # Add more versions as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Add Poetry to PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          if [ ! -f poetry.lock ]; then
            poetry lock
          fi
          poetry install --no-dev

      - name: Verify version from tag
        run: |
          tag_version=${GITHUB_REF#refs/tags/}
          tag_version=${tag_version#t}
          pyproject_version=$(poetry version -s)
          if [ "$tag_version" != "$pyproject_version" ]; then
            echo "Version in pyproject.toml ($pyproject_version) does not match tag version ($tag_version)"
            exit 1
          fi

      - name: Build the package
        run: poetry build

      - name: Check build result
        run: |
          if [ ! -d dist ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi

      - name: Configure Poetry with TestPyPI token
        run: |
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Publish to TestPyPI
        run: poetry publish --repository testpypi --build --verbose